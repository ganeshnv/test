---
- name: Deploying {{ tower_job_template_name }} Component to {{ dep_env }}
  hosts: "{{ tower_job_template_name }}_{{ dep_env }}_{{ server_type }}"
  vars_files:
    - roles/common/vars/linux_common.yml

  pre_tasks:

  roles:
  - { role: common, os_type: linux }
  - { role: chkArtifactDep }

  tasks:
    - block:
      - name: Set cell_code
        set_fact:
          cell_code: "{{ dep_env }}"

      - name: Setup download temp folder
        import_role:
          name: linuxMWTempDir
        tags: always

      - name: Download artifact from Artifactory
        import_role:
          name: linuxDownloadAndPrep
        tags: always


      # Remove the Compressed Artifact file so it is not copied to the filesDestination with the contents
      - name: Remove Compressed Artifact file
        vars:
          file_extension: "{{ published_artifact_url.split ( '.') [ -1 ] }}"
        file: 
          path: "{{ deploy_downloads_dir }}/{{ name }}"
          state: absent
        when: file_extension == 'zip' or
          file_extension == 'tgz' or
          file_extension == 'tar'
        tags: always

      - name: Change modes of unzipped files to allow copy to destination
        shell: "chmod -R 755 {{ deploy_downloads_dir }}"
        tags: always
        
      - name: Optional PreInstall Command
        import_role:
          name: linux_mw_cmd
          tasks_from: linux_ansible_scripts.yml 
        vars: 
          script_name: "{{ pre_install_runmwcmd }}"
        when: pre_install_runmwcmd is defined        
        
      - name: Copy Files to Destination
        shell: "{{ run_mw_cmd }} COPYFILES_{{ dep_env }} {{ deploy_downloads_dir }}/{{ art_sub_dir }}/. {{ files_destination }}"
        vars:
        - art_sub_dir: "{{ art_sub_dir|default('') }}"

      - name: Set artifact deployed property in Artifactory
        import_role:
          name: setArtDepl
        when: dep_env not in deployed
        tags: always

      always:
      - name: Remove temp directory after deployment
        vars:
          cell_code: "{{ dep_env }}"      
        import_role:
          name: linuxMWTempDir
          tasks_from: remove_temp_dir.yml
        tags: always

      - name: Optional PostInstall Command
        import_role:
          name: linux_mw_cmd
          tasks_from: linux_ansible_scripts.yml
        vars: 
          script_name: "{{ post_install_runmwcmd }}"
        when: post_install_runmwcmd is defined        

      # conditional for block above
      when: dep_env not in deployed or dep_override

  post_tasks:
    - name: Clear facts
      import_role:
        name: clearFacts
      tags: always
